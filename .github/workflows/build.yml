name: Build Scrapper DockerHub
on:
  push:
    branches:
      - k8s-deploy

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r server/requirements.txt

    - name: Build and push Docker image
      env:
        REGISTRY: ${{ secrets.DOCKER_REGISTRY_DOCKER_HUB  }}
        IMAGE_NAME: devops-scrapper-backend-k8s
      run: |
        docker build -t $REGISTRY/$IMAGE_NAME -f server/Dockerfile server/
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push $REGISTRY/$IMAGE_NAME
  
    
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14

    - name: Install dependencies
      run: |
        cd client
        npm install

    - name: Build and push Docker image
      env:
        REGISTRY: ${{ secrets.DOCKER_REGISTRY_DOCKER_HUB }}
        IMAGE_NAME: devops-scrapper-frontend-k8s
      run: |
        docker build -t $REGISTRY/$IMAGE_NAME -f client/Dockerfile client/
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push $REGISTRY/$IMAGE_NAME

    

  package:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest

    steps:
    - name: Archive backend
      uses: actions/upload-artifact@v2
      with:
        name: backend
        path: server
    - name: Build react code
      run: |
        npm install
        npm run build
      working-directory: client

    - name: Archive frontend
      uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: client/build