name: Deploy to GKE

on:
  push:
    branches:
      - gke-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v0.4.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker
      uses: google-github-actions/setup-gcloud@v0.4.0
      with:
        docker: true

    - name: Build and push Docker images
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-backend:${{ github.sha }} -f server/Dockerfile server/
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-frontend:${{ github.sha }} -f client/Dockerfile client/
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-backend:${{ github.sha }}
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-frontend:${{ github.sha }}

    - name: Configure kubectl
      run: |
        echo ${{ secrets.GCP_SA_KEY }} | base64 --decode > gcp-key.json
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
        GKE_CLUSTER_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}
    - name: Replace Docker image placeholders
      run: |
        sed -i 's|gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-backend:${{ github.sha }}|gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-backend:'"${GITHUB_SHA}"'|' path/to/backend-deployment.yaml
        sed -i 's|gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-frontend:${{ github.sha }}|gcr.io/${{ secrets.GCP_PROJECT_ID }}/devops-scrapper-frontend:'"${GITHUB_SHA}"'|' path/to/frontend-deployment.yaml
      env:
        GITHUB_SHA: ${{ github.sha }}
    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f client/k8s/backend.yaml
        kubectl apply -f server/k8s/.yaml

    - name: Wait for rollout to finish
      run: |
        kubectl rollout status deployment/devops-scrapper-backend
        kubectl rollout status deployment/devops-scrapper-frontend

    - name: Cleanup
      run: |
        rm kubeconfig.yaml
